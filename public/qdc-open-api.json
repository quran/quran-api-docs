{
    "openapi": "3.0.0",
    "info": {
        "title": "Quran.com V1 API",
        "version": "1.0.0",
        "description": "This Quran.com V1 APIs contains collections of requests that can be used to integrate your app with Quran.com"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "Production server"
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "o_t_h"
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "paths": {
        "/v1/collections/": {
            "post": {
                "description": "Create a new collection under user's account",
                "tags": [
                    "Collection"
                ],
                "summary": "Add collection",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the new collection that you want to create",
                                        "example": "Woman in Quran"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Collection"
                ],
                "description": "List collections owned by the user \n This api contains pagination read more about [pagination](/#pagination)",
                "summary": "Get all collections",
                "parameters": [
                    {
                        "in": "query",
                        "name": "sortBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "recentlyUpdated",
                                "alphabetical"
                            ],
                            "description": "Sort collections list by recentlyUpdated or alphabetical",
                            "example": "recentlyUpdated"
                        },
                        "description": "Sort collections list by recentlyUpdated or alphabetical"
                    },
                    {
                        "in": "query",
                        "name": "last",
                        "schema": {
                            "type": "integer",
                            "description": "The number of items you want to get. Should be used together with `before`",
                            "example": 10
                        },
                        "description": "The number of items you want to get. Should be used together with `before`"
                    },
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "oneOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "The number of items that you want to get",
                            "example": 10
                        },
                        "description": "The number of items that you want to get"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor after which you want to get the next page of items. Should be used together with `first`",
                            "example": "cld2mtxni0001od3h3b5o2ln6"
                        },
                        "description": "The cursor after which you want to get the next page of items. Should be used together with `first`"
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`",
                            "example": "cld2mtxnj0002od3h355y5nl0"
                        },
                        "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collections/{collectionId}/bookmarks": {
            "post": {
                "tags": [
                    "Collection"
                ],
                "summary": "Add collection Bookmark",
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "schema": {
                            "type": "string",
                            "description": "The id of the collection that you want to delete",
                            "example": "cld2mtxpj0003od3hgudu57w8"
                        },
                        "required": true,
                        "description": "The id of the collection that you want to delete"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "integer",
                                                "description": "Surah number",
                                                "example": 2
                                            },
                                            "mushaf": {
                                                "type": "integer",
                                                "enum": [
                                                    1,
                                                    2,
                                                    3,
                                                    4,
                                                    5,
                                                    6,
                                                    7,
                                                    11
                                                ],
                                                "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed",
                                                "example": 4
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "ayah"
                                                ],
                                                "description": "Type of bookmark",
                                                "default": "ayah"
                                            },
                                            "verseNumber": {
                                                "type": "integer",
                                                "example": 3
                                            }
                                        },
                                        "required": [
                                            "key",
                                            "mushaf",
                                            "verseNumber"
                                        ],
                                        "additionalProperties": false,
                                        "title": "Ayah"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "integer",
                                                "description": "Surah number or juz or page number"
                                            },
                                            "mushaf": {
                                                "type": "integer",
                                                "enum": [
                                                    1,
                                                    2,
                                                    3,
                                                    4,
                                                    5,
                                                    6,
                                                    7,
                                                    11
                                                ],
                                                "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "juz",
                                                    "page",
                                                    "surah"
                                                ],
                                                "description": "Type of bookmark",
                                                "example": "surah"
                                            }
                                        },
                                        "required": [
                                            "key",
                                            "mushaf"
                                        ],
                                        "additionalProperties": false,
                                        "title": "Surah, Juz, Or Page"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Collection"
                ],
                "summary": "Delete collection bookmark by details",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "integer",
                                                "description": "Surah number",
                                                "example": 2
                                            },
                                            "mushaf": {
                                                "type": "integer",
                                                "enum": [
                                                    1,
                                                    2,
                                                    3,
                                                    4,
                                                    5,
                                                    6,
                                                    7,
                                                    11
                                                ],
                                                "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed",
                                                "example": 4
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "ayah"
                                                ],
                                                "description": "Type of bookmark",
                                                "default": "ayah"
                                            },
                                            "verseNumber": {
                                                "type": "integer",
                                                "example": 3
                                            }
                                        },
                                        "required": [
                                            "key",
                                            "mushaf",
                                            "verseNumber"
                                        ],
                                        "additionalProperties": false,
                                        "title": "Ayah"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "integer",
                                                "description": "Surah number or juz or page number"
                                            },
                                            "mushaf": {
                                                "type": "integer",
                                                "enum": [
                                                    1,
                                                    2,
                                                    3,
                                                    4,
                                                    5,
                                                    6,
                                                    7,
                                                    11
                                                ],
                                                "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "juz",
                                                    "page",
                                                    "surah"
                                                ],
                                                "description": "Type of bookmark",
                                                "example": "surah"
                                            }
                                        },
                                        "required": [
                                            "key",
                                            "mushaf"
                                        ],
                                        "additionalProperties": false,
                                        "title": "Surah, Juz, Or Page"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/v1/collections/{collectionId}": {
            "delete": {
                "tags": [
                    "Collection"
                ],
                "summary": "Delete collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "schema": {
                            "type": "string",
                            "description": "Id of the collection that you want to delete",
                            "example": "cld2mtxpp0004od3h1sl9a7oi"
                        },
                        "required": true,
                        "description": "Id of the collection that you want to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Collection"
                ],
                "summary": "Get collection items by id",
                "parameters": [
                    {
                        "in": "query",
                        "name": "sortBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "recentlyAdded",
                                "verseKey"
                            ],
                            "description": "Sort the collection items result by recentlyAdded or verseKey"
                        },
                        "description": "Sort the collection items result by recentlyAdded or verseKey"
                    },
                    {
                        "in": "query",
                        "name": "last",
                        "schema": {
                            "type": "integer",
                            "description": "The number of items you want to get. Should be used together with `before`",
                            "example": 10
                        },
                        "description": "The number of items you want to get. Should be used together with `before`"
                    },
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "oneOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "The number of items that you want to get",
                            "example": 10
                        },
                        "description": "The number of items that you want to get"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor after which you want to get the next page of items. Should be used together with `first`",
                            "example": "cld2mtxni0001od3h3b5o2ln6"
                        },
                        "description": "The cursor after which you want to get the next page of items. Should be used together with `first`"
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`",
                            "example": "cld2mtxnj0002od3h355y5nl0"
                        },
                        "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Collection"
                ],
                "summary": "Update collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "schema": {
                            "type": "string",
                            "description": "The id of collection that you want to update"
                        },
                        "required": true,
                        "description": "The id of collection that you want to update"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The new name of the collection that you want to update"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collections/{collectionId}/bookmarks/{bookmarkId}": {
            "delete": {
                "tags": [
                    "Collection"
                ],
                "summary": "Delete collection bookmark by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "collectionId",
                        "schema": {
                            "type": "string",
                            "description": "The id of collection that you want to delete",
                            "example": "cld2mtxqa0005od3hcb2e7345"
                        },
                        "required": true,
                        "description": "The id of collection that you want to delete"
                    },
                    {
                        "in": "path",
                        "name": "bookmarkId",
                        "schema": {
                            "type": "string",
                            "description": "The id of bookmark that you want to delete",
                            "example": "cld2mtxqa0006od3h6ps35lov"
                        },
                        "required": true,
                        "description": "The id of bookmark that you want to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/collections/all": {
            "get": {
                "tags": [
                    "Collection"
                ],
                "summary": "Get all collection items",
                "parameters": [
                    {
                        "in": "query",
                        "name": "sortBy",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "recentlyUpdated",
                                "alphabetical"
                            ],
                            "description": "Sort collection items by recentlyUpdated or alphabetical"
                        },
                        "description": "Sort collection items by recentlyUpdated or alphabetical"
                    },
                    {
                        "in": "query",
                        "name": "last",
                        "schema": {
                            "type": "integer",
                            "description": "The number of items you want to get. Should be used together with `before`",
                            "example": 10
                        },
                        "description": "The number of items you want to get. Should be used together with `before`"
                    },
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "oneOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "The number of items that you want to get",
                            "example": 10
                        },
                        "description": "The number of items that you want to get"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor after which you want to get the next page of items. Should be used together with `first`",
                            "example": "cld2mtxni0001od3h3b5o2ln6"
                        },
                        "description": "The cursor after which you want to get the next page of items. Should be used together with `first`"
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`",
                            "example": "cld2mtxnj0002od3h355y5nl0"
                        },
                        "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/bookmarks/": {
            "post": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Add user bookmark",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "integer",
                                                "description": "Surah number",
                                                "example": 2
                                            },
                                            "mushaf": {
                                                "type": "integer",
                                                "enum": [
                                                    1,
                                                    2,
                                                    3,
                                                    4,
                                                    5,
                                                    6,
                                                    7,
                                                    11
                                                ],
                                                "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed",
                                                "example": 4
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "ayah"
                                                ],
                                                "description": "Type of bookmark",
                                                "default": "ayah"
                                            },
                                            "verseNumber": {
                                                "type": "integer",
                                                "description": "The verse number that you want to add",
                                                "example": 3
                                            }
                                        },
                                        "required": [
                                            "key",
                                            "mushaf",
                                            "verseNumber"
                                        ],
                                        "additionalProperties": false,
                                        "title": "Ayah"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "integer",
                                                "description": "Surah number or juz or page number"
                                            },
                                            "mushaf": {
                                                "type": "integer",
                                                "enum": [
                                                    1,
                                                    2,
                                                    3,
                                                    4,
                                                    5,
                                                    6,
                                                    7,
                                                    11
                                                ],
                                                "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "juz",
                                                    "page",
                                                    "surah"
                                                ],
                                                "description": "Type of bookmark",
                                                "example": "surah"
                                            }
                                        },
                                        "required": [
                                            "key",
                                            "mushaf"
                                        ],
                                        "additionalProperties": false,
                                        "title": "Surah, Juz, Or Page"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get user bookmarks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "mushafId",
                        "schema": {
                            "type": "integer",
                            "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                        },
                        "required": true,
                        "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "page",
                                "juz",
                                "surah",
                                "ayah"
                            ],
                            "default": "ayah"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "last",
                        "schema": {
                            "type": "integer",
                            "description": "The number of items you want to get. Should be used together with `before`",
                            "example": 10
                        },
                        "required": false,
                        "description": "The number of items you want to get. Should be used together with `before`"
                    },
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "oneOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "The number of items that you want to get",
                            "example": 10
                        },
                        "required": false,
                        "description": "The number of items that you want to get"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor after which you want to get the next page of items. Should be used together with `first`",
                            "example": "cld2mtxni0001od3h3b5o2ln6"
                        },
                        "required": false,
                        "description": "The cursor after which you want to get the next page of items. Should be used together with `first`"
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`",
                            "example": "cld2mtxnj0002od3h355y5nl0"
                        },
                        "required": false,
                        "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/bookmarks/{bookmarkId}": {
            "delete": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Delete Bookmark",
                "parameters": [
                    {
                        "in": "path",
                        "name": "bookmarkId",
                        "schema": {
                            "type": "string",
                            "description": "The id of bookmark to delete",
                            "example": "cld2mtxms0000od3h6cg1dfaf"
                        },
                        "required": true,
                        "description": "The id of bookmark to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/bookmarks/ayahs-range": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get bookmarks within a range of Ayahs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "mushafId",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                11
                            ],
                            "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                        },
                        "required": true,
                        "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                    },
                    {
                        "in": "query",
                        "name": "chapterNumber",
                        "schema": {
                            "type": "integer",
                            "description": "Chapter number of ayah range"
                        },
                        "required": true,
                        "description": "Chapter number of ayah range"
                    },
                    {
                        "in": "query",
                        "name": "verseNumber",
                        "schema": {
                            "type": "integer",
                            "description": "The starting range of the verse number"
                        },
                        "required": true,
                        "description": "The starting range of the verse number"
                    },
                    {
                        "in": "query",
                        "name": "perPage",
                        "schema": {
                            "type": "integer",
                            "description": "Number of verse range."
                        },
                        "required": true,
                        "description": "Number of verse range."
                    },
                    {
                        "in": "query",
                        "name": "last",
                        "schema": {
                            "type": "integer",
                            "description": "The number of items you want to get. Should be used together with `before`",
                            "example": 10
                        },
                        "required": false,
                        "description": "The number of items you want to get. Should be used together with `before`"
                    },
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "oneOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "The number of items that you want to get",
                            "example": 10
                        },
                        "required": false,
                        "description": "The number of items that you want to get"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor after which you want to get the next page of items. Should be used together with `first`",
                            "example": "cld2mtxni0001od3h3b5o2ln6"
                        },
                        "required": false,
                        "description": "The cursor after which you want to get the next page of items. Should be used together with `first`"
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`",
                            "example": "cld2mtxnj0002od3h355y5nl0"
                        },
                        "required": false,
                        "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/bookmarks/bookmark": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get bookmark",
                "parameters": [
                    {
                        "in": "query",
                        "name": "key",
                        "schema": {
                            "type": "integer",
                            "description": "Surah number or page number or juz number",
                            "example": 2
                        },
                        "required": true,
                        "description": "Surah number or page number or juz number"
                    },
                    {
                        "in": "query",
                        "name": "mushaf",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                11
                            ],
                            "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed",
                            "example": 4
                        },
                        "required": true,
                        "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "page",
                                "juz",
                                "surah",
                                "ayah"
                            ],
                            "description": "Type of bookmark",
                            "default": "ayah"
                        },
                        "required": false,
                        "description": "Type of bookmark"
                    },
                    {
                        "in": "query",
                        "name": "verseNumber",
                        "schema": {
                            "type": "integer",
                            "description": "The verse number of the bookmark"
                        },
                        "required": false,
                        "description": "The verse number of the bookmark"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/bookmarks/collections": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get bookmark collections",
                "parameters": [
                    {
                        "in": "query",
                        "name": "mushafId",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                11
                            ],
                            "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                        },
                        "required": true,
                        "description": "The id of mushaf that you want to use. \n\n1 = QCFV2 \n\n  2 = QCFV1 \n\n  3 = Indopak \n\n  4 = UthmaniHafs \n\n  5 = KFGQPCHAFS \n\n  6 = Indopak15Lines \n\n  7 = Indopak16Lines \n\n  11 = Tajweeed"
                    },
                    {
                        "in": "query",
                        "name": "key",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "description": "Surah number or page number or juz number"
                        },
                        "required": true,
                        "description": "Surah number or page number or juz number"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "page",
                                "juz",
                                "surah",
                                "ayah"
                            ],
                            "default": "ayah"
                        },
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "last",
                        "schema": {
                            "type": "integer",
                            "description": "The number of items you want to get. Should be used together with `before`",
                            "example": 10
                        },
                        "required": false,
                        "description": "The number of items you want to get. Should be used together with `before`"
                    },
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "oneOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "The number of items that you want to get",
                            "example": 10
                        },
                        "required": false,
                        "description": "The number of items that you want to get"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor after which you want to get the next page of items. Should be used together with `first`",
                            "example": "cld2mtxni0001od3h3b5o2ln6"
                        },
                        "required": false,
                        "description": "The cursor after which you want to get the next page of items. Should be used together with `first`"
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`",
                            "example": "cld2mtxnj0002od3h355y5nl0"
                        },
                        "required": false,
                        "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/preferences/": {
            "post": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Add or update preference",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "group": {
                                        "type": "string",
                                        "enum": [
                                            "tafsirs",
                                            "translations",
                                            "audio",
                                            "theme",
                                            "quranReaderStyles",
                                            "reading",
                                            "language"
                                        ],
                                        "description": "The preference group to add or update",
                                        "example": "language"
                                    },
                                    "key": {
                                        "type": "string",
                                        "description": "The preference key to add or update",
                                        "example": "language"
                                    },
                                    "value": {
                                        "description": "The preference value to add or update",
                                        "example": "en"
                                    }
                                },
                                "required": [
                                    "group",
                                    "key",
                                    "value"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Get user preferences",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/preferences/bulk": {
            "post": {
                "tags": [
                    "Preferences"
                ],
                "summary": "bulk add or update preference",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tafsirs": {},
                                    "translations": {},
                                    "audio": {},
                                    "theme": {},
                                    "quranReaderStyles": {},
                                    "reading": {},
                                    "language": {}
                                },
                                "additionalProperties": false,
                                "example": {
                                    "theme": {
                                        "type": "auto"
                                    },
                                    "reading": {
                                        "readingPreference": "translation",
                                        "showWordByWordTranslation": false,
                                        "selectedWordByWordTranslation": 20,
                                        "showWordByWordTransliteration": false,
                                        "selectedWordByWordTransliteration": 12,
                                        "selectedWordByWordLocale": "en",
                                        "showTooltipFor": [
                                            "translation"
                                        ],
                                        "wordClickFunctionality": "play-audio"
                                    },
                                    "quranReaderStyles": {
                                        "tafsirFontScale": 3,
                                        "quranTextFontScale": 3,
                                        "translationFontScale": 3,
                                        "quranFont": "code_v1",
                                        "mushafLines": "16_lines"
                                    },
                                    "translations": {
                                        "selectedTranslations": [
                                            131
                                        ]
                                    },
                                    "tafsirs": {
                                        "selectedTafsirs": [
                                            "en-tafisr-ibn-kathir"
                                        ]
                                    },
                                    "audio": {
                                        "reciter": 7,
                                        "playbackRate": 1,
                                        "showTooltipWhenPlayingAudio": false,
                                        "enableAutoScrolling": true
                                    },
                                    "language": "ar"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/reading-sessions/": {
            "post": {
                "tags": [
                    "Reading Sessions"
                ],
                "summary": "Add user reading sessions",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chapterNumber": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "description": "The chapter number to add to reading session"
                                    },
                                    "verseNumber": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "description": "The verse number to add to reading session"
                                    }
                                },
                                "required": [
                                    "chapterNumber",
                                    "verseNumber"
                                ],
                                "additionalProperties": false
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Reading Sessions"
                ],
                "summary": "Get user reading sessions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "last",
                        "schema": {
                            "type": "integer",
                            "description": "The number of items you want to get. Should be used together with `before`",
                            "example": 10
                        },
                        "description": "The number of items you want to get. Should be used together with `before`"
                    },
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "oneOf": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "description": "The number of items that you want to get",
                            "example": 10
                        },
                        "description": "The number of items that you want to get"
                    },
                    {
                        "in": "query",
                        "name": "after",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor after which you want to get the next page of items. Should be used together with `first`",
                            "example": "cld2mtxni0001od3h3b5o2ln6"
                        },
                        "description": "The cursor after which you want to get the next page of items. Should be used together with `first`"
                    },
                    {
                        "in": "query",
                        "name": "before",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`",
                            "example": "cld2mtxnj0002od3h355y5nl0"
                        },
                        "description": "The cursor before which you want to get the previous page of items. Should be used together with `last`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Profile",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Request success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden error. You access token might be expired. You need to refresh it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ForbiddenError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Token expired"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. The resource you're looking is not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NotFoundError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "The resource you're looking for does not exist"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error. Something is wrong your input. Please check your input and try again.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ValidationError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "`id` is required"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error. Something went wrong on our side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "ServerError"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Something went wrong"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}